# Define o nome do fluxo de trabalho e os eventos que o acionam
name: Build and Push Docker Image

on:
  workflow_dispatch:

# Define os jobs a serem executados
jobs:
  build-and-push:
    # Define o ambiente de execução do job
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Checkout do repositório
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Passo 2: Configuração do Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Passo 3: Construção e Envio da Imagem Docker com a tag do commit
      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/desafio-globo"
          IMAGE_TAG="${{ github.sha }}"

          docker build -t $IMAGE_NAME:$IMAGE_TAG .

          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

          docker push $IMAGE_NAME:$IMAGE_TAG

        # Define as variáveis de ambiente para o script
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      # Passo 4: Publicar a imagem com a tag 'latest'
      - name: Publish Latest Image
        run: |
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/desafio-globo"

          docker tag $IMAGE_NAME:${{ github.sha }} $IMAGE_NAME:latest

          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

          docker push $IMAGE_NAME:latest

        # Define as variáveis de ambiente para o script
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

          build-and-push:
